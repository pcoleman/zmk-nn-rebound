/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define CMK 0
#define QWT 1
#define GAM 2
#define SYM 3
#define NUM 4
#define RGB 5
#define NAV 6

&caps_word {
   continue-list = <UNDERSCORE MINUS BACKSPACE>;
};



/ {

    behaviors {
    };

    combos {
    };
};

/ {

        keymap {
        compatible = "zmk,keymap";

        colemak_layer {                      					  
		bindings = <
        &kp MINUS           &kp Q           &kp W     &kp F       &kp P        &kp B                    &kp J     &kp L          &kp U       &kp Y       &kp SEMI   &kp BSLH
        &kp BSPC            &kp A           &kp R     &kp S       &kp T        &kp G      &lt NAV ESC   &kp M     &kp N          &kp E       &kp I       &kp O      &kp ENTER
        &mt LSHIFT GRAVE    &kp Z           &kp X     &kp C       &kp D        &kp V      &kp F24       &kp K     &kp H          &kp COMMA   &kp DOT     &kp QMARK  &mt RSHIFT SQT
        &mt LCTRL TAB       &kp LEFT_GUI    &kp LALT  &kp F19     &lt SYM F17  &kp SPACE  &kp C_AL_LOCK &kp SPACE &lt NUM F18    &kp UP      &kp DOWN    &kp UP     &kp RIGHT
                        >;
			        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };

        qwerty_layer {                      					  
		bindings = <
        &trans     &kp Q        &kp W     &kp E       &kp R    &kp T                &kp Y     &kp U     &kp I       &kp O       &kp P        &trans
        &trans     &kp A        &kp S     &kp D       &kp F    &kp G    &trans      &kp H     &kp J     &kp K       &kp L       &kp SEMI     &trans
        &trans     &kp Z        &kp X     &kp C       &kp V    &kp B    &trans      &kp N     &kp M     &kp COMMA   &kp DOT     &kp QMARK    &trans
        &trans     &trans       &trans    &trans      &trans   &trans   &trans      &trans    &trans    &trans      &trans      &trans       &trans
                        >;
			        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };

        game_layer {                      					  
		bindings = <
        &trans     &kp Q        &kp W     &kp E       &kp R    &kp T                &kp Y     &kp U     &kp I       &kp O       &kp P        &trans
        &trans     &kp A        &kp S     &kp D       &kp F    &kp G    &trans      &kp H     &kp J     &kp K       &kp L       &kp SEMI     &trans
        &kp LSHIFT &kp Z        &kp X     &kp C       &kp V    &kp B    &trans      &kp N     &kp M     &kp COMMA   &kp DOT     &kp QMARK    &kp RSHIFT
        &kp LCTRL  &trans       &trans    &trans      &trans   &trans   &trans      &kp F8    &trans    &trans      &trans      &trans       &trans
                        >;
			        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };

        symbol_layer {
                bindings = <
        &trans  &kp F9  &kp F10  &kp F11   &kp F12 &trans              &trans   &kp AMPS        &kp STAR        &trans          &trans    &trans
        &kp DEL &kp F5  &kp F6   &kp F7    &kp F8  &trans   &trans     &trans   &kp DLLR        &kp PRCNT       &kp CARET       &trans    &trans
        &trans  &kp F1  &kp F2   &kp F3    &kp F4  &trans   &trans     &trans   &kp EXCL        &kp AT          &kp HASH        &trans    &trans
        &trans  &trans  &trans   &trans    &trans  &trans   &trans     &trans   &trans          &kp HOME        &kp PG_UP       &kp PG_DN &kp END
                        >;
                        sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
                };

        number_layer {
                bindings = <
        &trans &trans   &trans  &trans  &kp LBKT &kp RBKT                     &trans      &kp KP_N7      &kp KP_N8         &kp KP_N9         &kp EQUAL     &trans
        &trans &trans   &trans  &trans  &kp LPAR &kp RPAR    &trans           &trans      &kp KP_N4      &kp KP_N5         &kp KP_N6         &kp KP_N0     &trans 
        &trans &trans   &trans  &trans  &kp LBRC &kp RBRC    &trans           &trans      &kp KP_N1      &kp KP_N2         &kp KP_N3         &kp MINUS     &trans
        &trans &trans   &trans  &trans  &trans   &trans      &trans           &trans      &trans         &kp KP_SLASH      &kp KP_MULTIPLY   &kp KP_MINUS  &kp KP_PLUS
                        >;
                };

        rgb_layer {
                bindings = <
        &trans &trans  &trans &trans &trans &trans                        &trans           &trans        &trans               &trans               &trans               &trans 
        &trans &trans  &trans &trans &trans &trans     &trans             &trans           &trans        &rgb_ug RGB_BRD      &rgb_ug RGB_BRD      &rgb_ug RGB_BRI      &rgb_ug RGB_BRI
        &trans &trans  &trans &trans &trans &trans     &ext_power EP_TOG  &trans           &trans        &rgb_ug RGB_HUD      &rgb_ug RGB_SAD      &rgb_ug RGB_SAI      &rgb_ug RGB_HUI
        &trans &trans  &trans &trans &trans &trans     &rgb_ug RGB_TOG    &trans           &trans        &rgb_ug RGB_EFR      &rgb_ug RGB_SPD      &rgb_ug RGB_SPI      &rgb_ug RGB_EFF
                        >;
                };    

        nav_layer {
                bindings = <
        &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4 &trans &to CMK                   &trans &trans  &bt BT_SEL 5 &bt BT_SEL 6 &bt BT_SEL 7 &bt BT_SEL 8 
        &trans       &trans        &trans       &trans       &trans &to QWT  &trans           &trans &trans  &trans       &trans       &trans       &trans 
        &trans       &trans        &trans       &trans       &trans &to GAM  &trans           &trans &trans  &trans       &trans       &trans       &trans 
        &bt BT_CLR   &trans        &trans       &trans       &trans &to RGB  &bootloader      &trans &trans  &trans       &trans       &trans       &trans
                        >;
                        sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
                };
        };
};
